# Copyright (C) Markus Franz Xaver Johannes Oberhumer
# test minimal number of packages required for building UPX under Chimera Linux
#   clang: apk add clang cmake curl gmake gtar
#

name: 'Test - Minimal Chimera build'
on: [workflow_dispatch]
env:
  CMAKE_REQUIRED_QUIET: 'OFF'
  CMAKE_VERBOSE_MAKEFILE: 'ON'
  CTEST_OUTPUT_ON_FAILURE: 'ON'
  DEBIAN_FRONTEND: noninteractive

jobs:
  job-chimera-clang: # uses cmake + make
    if: true
    strategy: { matrix: { container: ['chimeralinux/chimera:latest'] } }
    name: ${{ format('clang {0}', matrix.container) }}
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    steps:
      - name: ${{ format('Build clang {0}', matrix.container) }}
        run: |
          apk update && apk upgrade && apk add clang cmake curl gmake gtar
          for p in make tar; do ln -s -v ../../bin/g$p /usr/local/bin/$p; done
          curl -OL https://github.com/upx/upx/releases/download/v4.2.1/upx-4.2.1-src.tar.xz
          tar -xoaf upx-*-src.tar.xz
          cd upx-*-src
          make    build/debug   CC="clang" CXX="clang++"
          make    build/release CC="clang" CXX="clang++"
          make -C build/debug   test
          make -C build/release test
          make -C build/release install DESTDIR="$PWD/Install"
          N=$(echo "upx-test-minimal-chimera-linux-clang-${{ matrix.container }}" | sed 's/[^0-9a-zA-Z_.-]/-/g')
          echo "artifact_name=$N" >> $GITHUB_ENV
      - name: ${{ format('Upload artifact {0}', env.artifact_name) }}
        if: false # missing nodejs on host
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: 'upx*/build/*/upx'
